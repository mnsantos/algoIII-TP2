\subsection{Experimentación:}

Vamos a hacer algunos tests para medir aproximadamente la cantidad de ciclos que le lleva algoritmo resolver el problema, y comparar con una función lineal para mostrar visualmente si la cota que 
calculamos en el punto anterior es correcta.

Decidimos crear tres casos de prueba, uno generando árboles al azar que poseen desde un nodo hasta 400 (usando las funciones random de c++), otro caso donde también tenemos árboles de 1 a 400 nodos, donde los nodos no pueden tener grado mayor que 2, y un último caso donde todos los nodos están conectados a uno determinado.

Podríamos suponer que en los dos últimos casos, el algoritmo debería encontrar la solución de manera más rápida, comparado con el random, es decir serían los mejores casos, porque es más fácil determinar un master. Pero vamos a ver en los gráficos que las diferencias no son muy grandes.

Gráfico de casos random
\begin{center}
\includegraphics[scale=0.4]{ej2/2/graficos/complejidadRandom.png} 
\end{center}


Gráfico de árboles de una rama
\begin{center}
\includegraphics[scale=0.4]{ej2/2/graficos/complejidadRama.png} 
\end{center}
Gráfico de árboles con un nodo núcleo
\begin{center}
\includegraphics[scale=0.4]{ej2/2/graficos/complejidadPomp.png} 
\end{center}

Podemos comprobar que estos experimentos se ajustan al análisis teórico de la complejidad, realizado anteriormente, y que la función lineal acota superiormente la complejidad de nuestro algoritmo.
